==11793== Memcheck, a memory error detector
==11793== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11793== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11793== Command: ./app/shell-app
==11793== Parent PID: 3328
==11793== 
--11793-- 
--11793-- Valgrind options:
--11793--    --leak-check=full
--11793--    --show-leak-kinds=all
--11793--    --track-origins=yes
--11793--    --verbose
--11793--    --log-file=../valgrind-out-before.txt
--11793-- Contents of /proc/version:
--11793--   Linux version 5.4.0-87-generic (buildd@lgw01-amd64-059) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #98~18.04.1-Ubuntu SMP Wed Sep 22 10:45:04 UTC 2021
--11793-- 
--11793-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--11793-- Page sizes: currently 4096, max supported 4096
--11793-- Valgrind library directory: /usr/lib/valgrind
--11793-- Reading syms from /home/vivek/work/sem2/808x/assignments/week6/cpp-boilerplate/build/app/shell-app
--11793-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--11793--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--11793--   .. CRC mismatch (computed 0ef8daab wanted 65bccefe)
--11793--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--11793--   .. CRC is valid
--11793-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--11793--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--11793--   .. CRC mismatch (computed 41ddb025 wanted 9972f546)
--11793--    object doesn't have a symbol table
--11793--    object doesn't have a dynamic symbol table
--11793-- Scheduler: using generic scheduler lock implementation.
--11793-- Reading suppressions file: /usr/lib/valgrind/default.supp
==11793== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-11793-by-vivek-on-???
==11793== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-11793-by-vivek-on-???
==11793== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-11793-by-vivek-on-???
==11793== 
==11793== TO CONTROL THIS PROCESS USING vgdb (which you probably
==11793== don't want to do, unless you know exactly what you're doing,
==11793== or are doing some strange experiment):
==11793==   /usr/lib/valgrind/../../bin/vgdb --pid=11793 ...command...
==11793== 
==11793== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==11793==   /path/to/gdb ./app/shell-app
==11793== and then give GDB the following command
==11793==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=11793
==11793== --pid is optional if only one valgrind process is running
==11793== 
--11793-- REDIR: 0x4020d20 (ld-linux-x86-64.so.2:strlen) redirected to 0x580608c1 (???)
--11793-- REDIR: 0x4020b00 (ld-linux-x86-64.so.2:index) redirected to 0x580608db (???)
--11793-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--11793--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--11793--   .. CRC mismatch (computed 50df1b30 wanted 4800a4cf)
--11793--    object doesn't have a symbol table
--11793-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--11793--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--11793--   .. CRC mismatch (computed f893b962 wanted 95ee359e)
--11793--    object doesn't have a symbol table
==11793== WARNING: new redirection conflicts with existing -- ignoring it
--11793--     old: 0x04020d20 (strlen              ) R-> (0000.0) 0x580608c1 ???
--11793--     new: 0x04020d20 (strlen              ) R-> (2007.0) 0x04c34db0 strlen
--11793-- REDIR: 0x401d540 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c35ee0 (strcmp)
--11793-- REDIR: 0x4021260 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c394f0 (mempcpy)
--11793-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25
--11793--    object doesn't have a symbol table
--11793-- Reading syms from /lib/x86_64-linux-gnu/libgcc_s.so.1
--11793--    object doesn't have a symbol table
--11793-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--11793--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--11793--   .. CRC mismatch (computed cb654923 wanted 8713c55a)
--11793--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--11793--   .. CRC is valid
--11793-- Reading syms from /lib/x86_64-linux-gnu/libm-2.27.so
--11793--   Considering /lib/x86_64-linux-gnu/libm-2.27.so ..
--11793--   .. CRC mismatch (computed 8017c758 wanted 0183ab3a)
--11793--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libm-2.27.so ..
--11793--   .. CRC is valid
--11793-- REDIR: 0x547db70 (libc.so.6:memmove) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547ce80 (libc.so.6:strncpy) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547de50 (libc.so.6:strcasecmp) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547c8d0 (libc.so.6:strcat) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547ceb0 (libc.so.6:rindex) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547f5a0 (libc.so.6:rawmemchr) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547dce0 (libc.so.6:mempcpy) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547db10 (libc.so.6:bcmp) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547ce40 (libc.so.6:strncmp) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547c940 (libc.so.6:strcmp) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547dc40 (libc.so.6:memset) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x549aed0 (libc.so.6:wcschr) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547cde0 (libc.so.6:strnlen) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547c9b0 (libc.so.6:strcspn) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547dea0 (libc.so.6:strncasecmp) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547c980 (libc.so.6:strcpy) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547dfe0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547cee0 (libc.so.6:strpbrk) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547c900 (libc.so.6:index) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547cdb0 (libc.so.6:strlen) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x54874a0 (libc.so.6:memrchr) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547def0 (libc.so.6:strcasecmp_l) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547dae0 (libc.so.6:memchr) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x549bc90 (libc.so.6:wcslen) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547d190 (libc.so.6:strspn) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547de20 (libc.so.6:stpncpy) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547ddf0 (libc.so.6:stpcpy) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547f5d0 (libc.so.6:strchrnul) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x547df40 (libc.so.6:strncasecmp_l) redirected to 0x4a2c6e0 (_vgnU_ifunc_wrapper)
--11793-- REDIR: 0x556d300 (libc.so.6:__strrchr_avx2) redirected to 0x4c34730 (rindex)
--11793-- REDIR: 0x5476140 (libc.so.6:malloc) redirected to 0x4c31aa0 (malloc)
--11793-- REDIR: 0x556d4d0 (libc.so.6:__strlen_avx2) redirected to 0x4c34cf0 (strlen)
--11793-- REDIR: 0x5569ae0 (libc.so.6:__memcmp_avx2_movbe) redirected to 0x4c37e00 (bcmp)
--11793-- REDIR: 0x5488c50 (libc.so.6:__strcmp_sse2_unaligned) redirected to 0x4c35da0 (strcmp)
--11793-- REDIR: 0x4ed1280 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x4c32110 (operator new(unsigned long))
--11793-- REDIR: 0x556d9f0 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c39130 (mempcpy)
==11793== Conditional jump or move depends on uninitialised value(s)
==11793==    at 0x109D68: main (main.cpp:9)
==11793==  Uninitialised value was created by a stack allocation
==11793==    at 0x109CFA: main (main.cpp:5)
==11793== 
--11793-- REDIR: 0x5476a30 (libc.so.6:free) redirected to 0x4c32cd0 (free)
==11793== 
==11793== HEAP SUMMARY:
==11793==     in use at exit: 44 bytes in 2 blocks
==11793==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==11793== 
==11793== Searching for pointers to 2 not-freed blocks
==11793== Checked 112,952 bytes
==11793== 
==11793== 20 bytes in 1 blocks are indirectly lost in loss record 1 of 2
==11793==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11793==    by 0x10A611: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:111)
==11793==    by 0x10A57E: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==11793==    by 0x10A4DF: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==11793==    by 0x10A3D4: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==11793==    by 0x10A220: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==11793==    by 0x10A05B: std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) (stl_vector.h:297)
==11793==    by 0x109EBE: AnalogSensor::Read() (AnalogSensor.cpp:16)
==11793==    by 0x109D44: main (main.cpp:7)
==11793== 
==11793== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==11793==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11793==    by 0x109EA2: AnalogSensor::Read() (AnalogSensor.cpp:16)
==11793==    by 0x109D44: main (main.cpp:7)
==11793== 
==11793== LEAK SUMMARY:
==11793==    definitely lost: 24 bytes in 1 blocks
==11793==    indirectly lost: 20 bytes in 1 blocks
==11793==      possibly lost: 0 bytes in 0 blocks
==11793==    still reachable: 0 bytes in 0 blocks
==11793==         suppressed: 0 bytes in 0 blocks
==11793== 
==11793== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==11793== 
==11793== 1 errors in context 1 of 2:
==11793== Conditional jump or move depends on uninitialised value(s)
==11793==    at 0x109D68: main (main.cpp:9)
==11793==  Uninitialised value was created by a stack allocation
==11793==    at 0x109CFA: main (main.cpp:5)
==11793== 
==11793== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
